<Application x:Class="Planner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Planner"
             StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <Style  x:Key="ControlButtonsImageStyle" TargetType="Image">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30" />
            <Setter Property="Margin" Value="3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Height" Value="33"/>
                    <Setter Property="Width" Value="33"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="ArrowsButtonsImageStyle" TargetType="Image">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="25" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style  x:Key="ExclamationPointButtonStyle" TargetType="Button">

            <Setter Property="Content" Value="!"/>
            <Setter Property="Margin" Value="10 5"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontWeight" Value="ExtraBold"/>


            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="ControlButtonsStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="MenuButtonsStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="MediumBlue"/>
            <Setter Property="FontSize" Value="14"/>

            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                   
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="CornflowerBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="MenuButtonRedStyle" TargetType="Button">
            <Setter Property="Background" Value="LightCoral"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="IndianRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style  x:Key="MenuButtonGreenStyle" TargetType="Button">
            <Setter Property="Background" Value="LightGreen"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="ForestGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="10 0 10 5"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7" Background="#25B7D3" >
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontSize" Value="13"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="RoundedPlusButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Opacity" Value="0.6"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="40" Background="#25B7D3" >
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RoundedCancelButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="80"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="20 120"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Opacity" Value="0.6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="40" Background="DarkBlue">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NotSelectedCaruselMiniTextBlockValue" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2 0"/>
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="Foreground" Value="SlateGray"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="9" />
        </Style>

        <Style x:Key="NotSelectedCaruselTextBlockValue" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2 0"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="11" />
        </Style>

        <Style x:Key="SelectedCaruselTextBlockValue" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#25B7D3"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="13" />
            <Setter Property="Padding" Value="1 2"/>
        </Style>

        <Style x:Key="TitleTextBlock" TargetType="TextBlock">
            <Setter Property="Margin" Value="20 10"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>


        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid Width="40" Height="20">
                            <Rectangle x:Name="outherRect" RadiusX="8" RadiusY="8">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="White"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Ellipse Width="18" Height="18" x:Name="highlightCircle" Margin="-20 0 0 0">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="White"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="outherRect" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="LightGreen"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="highlightCircle" Property="Margin" Value="20 0 0 0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="outherRect" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="LightCoral"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="highlightCircle" Property="Margin" Value="-20 0 0 0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultTextBlock" TargetType="TextBlock">
            <Setter Property="Margin" Value="5 3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <Style x:Key="DefaultTextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="5 3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            
        </Style>

        <Style x:Key="BigTextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="5 3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>

        <Style x:Key="DefaultDatePicker" TargetType="DatePicker">
            <Setter Property="Margin" Value="5 3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="150"/>
        </Style>

    </Application.Resources>
</Application>
